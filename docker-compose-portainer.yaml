services:
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    volumes:
      - ticketz_backend_public:/usr/src/app/public
      - ticketz_backend_private:/usr/src/app/private
    restart: always
    ports:
      - ${BACKEND_PORT:-8080}:3000
    networks:
      - network_public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1"
          memory: 1024M

  frontend:
    ports:
      - ${FRONTEND_PORT:-3000}:80
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    volumes:
      - ticketz_backend_public:/var/www/backend-public
    restart: always
    depends_on:
      - ticketz_backend
    networks:
      - network_public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1"
          memory: 1024M
      labels:
        - traefik.enable=true
        - traefik.http.routers.chatwoot_nestor_app.rule=Host(`${FRONTEND_URL}`)
        - traefik.http.routers.chatwoot_nestor_app.entrypoints=websecure
        - traefik.http.routers.chatwoot_nestor_app.tls.certresolver=letsencryptresolver
        - traefik.http.routers.chatwoot_nestor_app.priority=1
        - traefik.http.routers.chatwoot_nestor_app.service=chatwoot_nestor_app
        - traefik.http.services.chatwoot_nestor_app.loadbalancer.server.port=${FRONTEND_PORT:-3000}
        - traefik.http.services.chatwoot_nestor_app.loadbalancer.passhostheader=true
        - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
        - traefik.http.routers.chatwoot_nestor_app.middlewares=sslheader@docker

volumes:
  ticketz_backend_public:
    external: true
    name: ticketz_backend_public
  ticketz_backend_private:
    external: true
    name: ticketz_backend_private

networks:
  network_public:
    external: true
    name: network_public
